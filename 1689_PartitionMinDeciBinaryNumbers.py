"""
A decimal number is called deci-binary if each of its digits is either 0 or 1 without any leading zeros. For example,
 101 and 1100 are deci-binary, while 112 and 3001 are not.

Given a string n that represents a positive decimal integer, return the minimum number of positive deci-binary numbers
 needed so that they sum up to n.
"""


def min_partitions(n: str) -> int:
    """
    :param n: 1 <= len(n) <= 100000 and consists only of digits.
        n contains no leading zeros and represents a positive integer
    :return: minimum number of positive deci-binary numbers that sum up to n
    """
    # return max digits in n
    return int(max(n))


test_cases = [("32", 3),
              ("82734", 8),
              ("27346209830709182346", 9),
              ("25555775575557757557557757777757555557775577777575775755775757755557557555575777557777555755575577777" +
               "57757557575755777775557775555557555775557577575555775557555557575755555757577557755575575777777777577" +
               "77775577555577575775577575755755757577577775555777757775577557777555577757577555557555775577755555777" +
               "55777757575757575775775575757775757777575757557755757777557775555577577775775757755777557577557577755" +
               "75775757557557757575775757755575757575755777757557757557757557775757775777575575555555577557555775755" +
               "77757555777555757757557777755775555777557777557755755777557575577575555557757555557775755575575775575" +
               "55757575775575775577557757575557755775557577575775757755577577577777777557777777555777575755557557575" +
               "77757575575575757775577757757777557555775755757557777575775775557557755555555575775555755755557777757" +
               "57757755555555755555777577777777555757777777575555557775577755577577555777577555775775555775775557755" +
               "57777777757555775755575777755757775777557575555557775777775575577755757757755755755575555777557775577" +
               "55577575757575757775577577577575575755755555775755777757557755755775575557757777555575555755775777757" +
               "55555757555557557777555575777775775775755755755575755775577755775575757577557777557775555777775775555" +
               "57575757575555757777555577755755775557775775775575757757555575557577777557757577755777557575575777555" +
               "75555555777777755577777755757555575777575755577577555777577775755775577755757755777557575755755777775" +
               "57555555755775555577557755755577555557757757755757575577577577575777777577755755777777755755757757577" +
               "75777757575575757757755555755755755775755777555777555555755755777555577555577757557775555775755777555" +
               "77755557775575777757557757555575755755755777757577575757575555575577555575757575575777557575755775575" +
               "77755575757575775757777577775557757577577555575757555755575755755757575755757577777577777575755755555" +
               "55555757755755577577555575757555757777555757577575755757555757555577757777557557755557575577577575575" +
               "57557557757757777555755775577577555575775577555775557555775755575757555555557557775557577775577777775" +
               "75777777555575757777757575755577575757555555555777755577557777755775777577775575777557577575755755557" +
               "77575757555777755555577757755777555577775557577575757775755555557757777775555755575755775775755757575" +
               "75577757575755555757777757755757757757777777575577775777557577577757557555757775775755557775557575555" +
               "55757557577555557557577575557557775575777575555577755557757757777757555555557575777577775577777555757" +
               "755755777775777775", 7), ]
for test_n, expected_count in test_cases:
    assert min_partitions(test_n) == expected_count, test_n
